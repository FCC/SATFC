/*
 * SATFC Build file.
 * @author afrechet
 * @author newmanne
 * 
 * @TODO 
 *	1. Automatic git push after publish.
 *	2. Resolve native dependencies (e.g. on clasp). 
 *  3. Figure out how to work with private, password protected non-maven-central repo.
 *
 */

// Build script dependencies.
buildscript {
	repositories { mavenCentral() }
	dependencies { classpath 'org.ajoberstar:gradle-git:0.9.0' }
}

// In this section you declare where to find the dependencies of your project
repositories {
    //EARG maven repo.   
    maven {
    	url 'https://bitbucket.org/EARG-builder/maven-repo/raw/master/releases/'
    }
    
    mavenCentral()
}

//Grab git information.
import org.ajoberstar.grgit.Grgit
public String getGitName()
{
	def repo = Grgit.open(project.file('.'))
	
	def branch = repo.branch.current.name
	def sha = repo.head().abbreviatedId
	
	return branch+'-'+sha
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {

    //All the product dependencies.
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ca.ubc.cs.beta:aeatk:2.08.01-development-82e4ccb826d1'
    compile 'commons-codec:commons-codec:1.7'
    compile 'org.apache.commons:commons-lang3:3.3.1'
    compile 'org.jgrapht:jgrapht-core:0.9.0'
    compile 'au.com.bytecode:opencsv:2.4'
    compile 'com.google.guava:guava:18.0'
    compile 'org.projectlombok:lombok:1.14.8'
    compile 'org.slf4j:slf4j-parent:1.7.5'
    compile 'ch.qos.logback:logback-access:1.0.13'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'ch.qos.logback:logback-core:1.0.13'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.4'
	compile 'com.fasterxml.jackson.core:jackson-core:2.4.4'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.4'
	compile 'com.beust:jcommander:1.35-patched'
	compile 'commons-collections:commons-collections:3.2.1'
    compile 'net.java.dev.jna:jna:4.0.0'
    compile 'com.mangosdk:spi:0.2.4'

    // Test dependencies.
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.8'
}

//Project properties.
applicationName = 'SATFC'
jar.baseName = applicationName
version = "1.0-"+getGitName()
//mainClassName = 'ca.ubc.cs.beta.stationpacking.execution.SATFCFacadeExecutor'

mainClassName = 'ca.ubc.cs.beta.stationpacking.TestDependencies'
applicationDefaultJvmArgs = ['-Xmx2048m']


//Publishing to EARG maven repo.
public String getEARGMavenRepo()
{
	Properties properties = new Properties()
	properties.load(project.rootProject.file('local.properties').newDataInputStream())
	def eargMavenRepo = properties.getProperty('earg.mavenrepo.dir')
	return eargMavenRepo
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}
publishing {

	repositories {
	    //Local EARG maven repo.   
	    maven {
	    	url getEARGMavenRepo()+'/snapshots/'
	    }
	}
	
	publications {
	
		maven(MavenPublication) {
			groupId 'ca.ubc.cs.beta'
			artifactId applicationName
			version version
			
			from components.java
			
			artifact sourceJar {
				classifier "sources"
			}
			artifact distZip {
				classifier "dist"
			}
		}
	
	}

}






//task copyRuntimeLibs(type: Copy) {
//	description 'Copy runtime libraries to dist/lib.'
//	from configurations.runtime  
//	into "dist/lib"  
//}

//task copyClasp(type: Copy) {
//	description 'Copies necessary clasp files to dist.'	
//    from "SATsolvers/clasp"
//    include "compile.sh"
//    include "libjnaclasp-2.1.3.tar.gz"
//    include "jna/libjnaclasp.*"
//	into "dist/clasp"  
//}

//task createStartScript(type: CreateStartScripts) {
//	description 'Create SATFC execution script.'
//	mainClassName 'ca.ubc.cs.beta.stationpacking.execution.SATFCFacadeExecutor'
//	applicationName 'SATFC'
//	defaultJvmOpts ['-Xmx2048m']
//	outputDir ''
//}

//task makeExecScripts(dependsOn: 'classes', type: JavaExec) {
//    main = 'ca.ubc.cs.beta.aeatk.ant.execscript.ExecScriptCreator'
//    classpath = sourceSets.main.runtimeClasspath
//    args '--class', 'ca.ubc.cs.beta.stationpacking.execution.SATFCFacadeExecutor', '--name', 'satfc', '--file-to-write', 'dist/', '--default-mem', '2048' 
//}
