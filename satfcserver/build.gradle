buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
        classpath 'org.ajoberstar:gradle-git:0.12.0'
    }
}

apply plugin: 'spring-boot'

dependencies {
    compile project(':satfc')

    // spring
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    // jackson
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:$jacksonVersion"

    compile "io.dropwizard.metrics:metrics-servlets:$dropwizardMetricVersion"

    // logging
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:jcl-over-slf4j:1.7.7'
    compile 'org.slf4j:jul-to-slf4j:1.7.7'
    compile 'ch.qos.logback:logback-access:1.0.13'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'ch.qos.logback:logback-core:1.0.13'

    // convenience
    compile 'org.projectlombok:lombok:1.14.8'
    compile 'com.google.guava:guava:18.0'

    // test
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-all:1.10.8"
}

// Creates scripts for entry points
// Subproject must apply application plugin to be able to call this method.
def createScript(project, mainClass, name, jvmArgs) {
    project.tasks.create(name: name, type: CreateStartScripts) {
        outputDir = new File(project.buildDir, 'scripts')
        mainClassName = mainClass
        applicationName = name
        classpath = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
        applicationDefaultJvmArgs = jvmArgs
    }
    project.tasks[name].dependsOn(project.jar)
    project.applicationDistribution.with {
        into("bin") {
            from(project.tasks[name])
            fileMode = 0755
        }
    }
}
createScript(project, 'ca.ubc.cs.beta.stationpacking.cache.scripts.ConstraintCache', 'CACHE_CONSTRAINER', ['-Xmx16g'])

//Project properties.
applicationName = 'SATFCServer'
version = "$SATFCVersion-"+getGitName()

jar {
    baseName = applicationName
}